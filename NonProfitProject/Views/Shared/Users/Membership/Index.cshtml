@model List<NonProfitProject.Models.Receipts>
@{
    ViewData["Title"] = "Manage Membership";
    ViewData["Title2"] = "Profile";
    Layout = "_" + ViewContext.RouteData.Values["area"]?.ToString() + "Layout";

}
<div class="container">
    <div class="card-header-pills"><h1 class="fa fa-address-card"> @ViewData["Title"]</h1></div>
    @if (Model == null)
    {
        <h3>Lifetime Membership</h3>
    }
    else
    {
        <br />
        <div class="row text-center justify-content-center mb-3 mt-3">
            <div class="border-right p-5" style="padding-top:0 !important; padding-bottom:0 !important;">
                <h2 id="years">@ViewBag.TimeSpan[0]</h2>
                <p>Years</p>
            </div>
            <div class="border-right p-5" style="padding-top:0 !important; padding-bottom:0 !important;">
                <h2 id="months">@ViewBag.TimeSpan[1]</h2>
                <p>Months</p>
            </div>
            <div class="border-right p-5" style="padding-top:0 !important; padding-bottom:0 !important;">
                <h2 id="days">@ViewBag.TimeSpan[2]</h2>
                <p>Days</p>
            </div>
            <div class="border-right p-5" style="padding-top:0 !important; padding-bottom:0 !important;">
                <h2 id="hours">@ViewBag.TimeSpan[3]</h2>
                <p>Hours</p>
            </div>
            <div class="border-right p-5" style="padding-top:0 !important; padding-bottom:0 !important;">
                <h2 id="minutes">@ViewBag.TimeSpan[4]</h2>
                <p>Minutes</p>
            </div>
            <div class="p-5" style="padding-top:0 !important; padding-bottom:0 !important;">
                <h2 id="seconds">@ViewBag.TimeSpan[5]</h2>
                <p>Seconds</p>
            </div>
        </div>
        <div style="font-size:medium;">
            <div class="card">
                <table class="table">
                    <thead class="thead-dark">
                        <tr>
                            <th scope="col" class="w-auto">Receipt ID</th>
                            <th scope="col">Username</th>
                            <th scope="col">Membership</th>
                            <th scope="col">Start Date</th>
                            <th scope="col">End Date</th>
                            <th scope="col">Billing Date</th>
                            <th scope="col">Membership Status</th>
                            <th scope="col"></th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Count == 0)
                        {
                            <tr>
                                <td style="overflow:visible;overflow-wrap:normal;margin:auto;">
                                    <h5>There are no membership dues</h5>
                                </td>

                            </tr>

                        }
                        @foreach (var due in Model)
                        {
                            <tr>
                                <td scope="row">@due.ReceiptID</td>
                                <td scope="row">@due.User.UserName</td>
                                <td>@due.MembershipDue.MembershipType.Name</td>
                                <td>@due.MembershipDue.MemStartDate.ToShortDateString()</td>
                                <td>@due.MembershipDue.MemEndDate.ToShortDateString()</td>
                                <td>@due.MembershipDue.MemRenewalDate.ToShortDateString()</td>
                                <td>
                                    @{
                                        if (due.MembershipDue.MemActive)
                                        {
                                            <p>Active</p>
                                        }
                                        else
                                        {
                                            @if (due.MembershipDue.MemCancelDate != null)
                                            {
                                                <p>Canceled</p>
                                            }
                                            else
                                            {
                                                <p>Expired</p>
                                            }

                                        }
                                    }
                                </td>
                                <td>
                                    <button class="btn btn-outline-dark mr-1" onclick="location.href = '@Url.Action("Details","Membership",new {id = due.ReceiptID })'">Details</button>
                                </td>
                                <td>
                                    @if (due.MembershipDue.MemActive)
                                    {
                                        <form method="post" asp-action="CancelMembership" asp-route-id="@due.ReceiptID">
                                            <button type="button" class="btn btn-danger" onclick="CancelMembership(this)">Cancel Membership</button>
                                        </form>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <script type="text/javascript">
            var yearsInput = document.getElementById("years");
            var monthsInput = document.getElementById("months");
            var daysInput = document.getElementById("days");
            var hoursInput = document.getElementById("Hours");
            var minutesInput = document.getElementById("minutes");
            var secondsInput = document.getElementById("seconds");

            var interval = setInterval(function () {
                if (secondsInput.innerHTML == 59) {
                    secondsInput.innerHTML = 0;
                    if (minutesInput.innerHTML == 59) {
                        minutesInput.innerHTML = 0;
                        if (hoursInput.innerHTML == 23) {
                            hoursInput.innerHTML = 0;
                            if (daysInput.innerHTML == 29) {
                                daysInput.innerHTML = 0;
                                if (monthsInput.innerHTML == 11) {
                                    monthsInput.innerHTML = 0;
                                    yearsInput.innerHTML = parseInt(yearsInput.innerHTML) + 1;
                                }
                                else {
                                    monthsInput.innerHTML = parseInt(monthsInput.innerHTML) + 1;
                                }
                            }
                            else {
                                daysInput.innerHTML = parseInt(daysInput.innerHTML) + 1;
                            }
                        }
                        else {
                            hoursInput.innerHTML = parseInt(hoursInput.innerHTML) + 1;
                        }
                    }
                    else {
                        minutesInput.innerHTML = parseInt(minutesInput.innerHTML) + 1;
                    }

                }
                else {
                    secondsInput.innerHTML = parseInt(secondsInput.innerHTML) + 1;
                }

            }, 1000)
            function CancelMembership() {
                Swal.fire({
                    title: 'Are you sure you want to cancel membership?',
                    showDenyButton: true,
                    confirmButtonText: `Yes`,
                    denyButtonText: `No`,
                }).then((result) => {
                    /* Read more about isConfirmed, isDenied below */
                    if (result.isConfirmed) {
                        document.CancelMembershipForm.submit();
                    }
                })
            }
        </script>
    }
</div>
